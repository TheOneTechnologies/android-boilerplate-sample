apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"



    defaultConfig {
        applicationId "com.theonetech.android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //Enable Data Binding
    buildFeatures {
        dataBinding true
    }

    lintOptions {
        abortOnError false
        quiet true
        lintConfig file("$project.rootDir/app/code_quality_tools/lint.xml")
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }



    packagingOptions{
        exclude 'META-INF/rxjava.properties'
    }


}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    //Material Components
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.cardview:cardview:1.0.0"

    //view scalable size unit library
    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    // ViewModel and LiveData dependencies
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'

    // Room dependencies
    //implementation 'androidx.room:room-runtime:2.2.5'
    //annotationProcessor 'androidx.room:room-compiler:2.2.5'


    implementation 'androidx.multidex:multidex:2.0.1'

    // Paging Library
    implementation 'androidx.paging:paging-runtime:2.1.2'

    //media management and image loading
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'
     //for Rx with retrofit
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'


    //permission
    implementation 'com.nabinbhandari.android:permissions:3.8'

    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'




    //Unit Testing
    testImplementation 'junit:junit:4.13'
    //Androidx test
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.ext:truth:1.3.0"

    // Espresso dependencies
    // Optional if you need to detect intents.
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // DONE : place mockwebserver dependency here
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.4.0"

    def lifecycle_version = "2.1.0"

    //ViewModel & LiveData Dependency
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    
    // Unit testing dependencies
    //testImplementation "org.mockito:mockito-core:2.11.0"
    //androidTestImplementation 'org.mockito:mockito-android:2.11.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.


}
apply from: "$project.rootDir/app/code_quality_tools/quality.gradle"


/*
task checkstyle {
    configFile = rootProject.file("$project.rootDir/app/code_quality_tools/checkstyle.xml")
}*/
